//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_MenuButton;
        
        private static SteamVR_Action_Single p_default_Trigger;
        
        private static SteamVR_Action_Single p_default_Grip;
        
        private static SteamVR_Action_Boolean p_default_TriggerPressed;
        
        private static SteamVR_Action_Boolean p_default_GripPressed;
        
        private static SteamVR_Action_Boolean p_default_PrimaryButton;
        
        private static SteamVR_Action_Boolean p_default_SecondaryButton;
        
        private static SteamVR_Action_Boolean p_default_PrimaryTouch;
        
        private static SteamVR_Action_Boolean p_default_SecondaryTouch;
        
        private static SteamVR_Action_Boolean p_default_Primary2DAxisClick;
        
        private static SteamVR_Action_Boolean p_default_Primary2DAxisTouch;
        
        private static SteamVR_Action_Boolean p_default_Secondary2DAxisClick;
        
        private static SteamVR_Action_Boolean p_default_Secondary2DAxisTouch;
        
        private static SteamVR_Action_Vector2 p_default_Primary2DAxis;
        
        private static SteamVR_Action_Vector2 p_default_Secondary2DAxis;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        public static SteamVR_Action_Boolean default_MenuButton
        {
            get
            {
                return SteamVR_Actions.p_default_MenuButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single default_Trigger
        {
            get
            {
                return SteamVR_Actions.p_default_Trigger.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single default_Grip
        {
            get
            {
                return SteamVR_Actions.p_default_Grip.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TriggerPressed
        {
            get
            {
                return SteamVR_Actions.p_default_TriggerPressed.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GripPressed
        {
            get
            {
                return SteamVR_Actions.p_default_GripPressed.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_PrimaryButton
        {
            get
            {
                return SteamVR_Actions.p_default_PrimaryButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SecondaryButton
        {
            get
            {
                return SteamVR_Actions.p_default_SecondaryButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_PrimaryTouch
        {
            get
            {
                return SteamVR_Actions.p_default_PrimaryTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SecondaryTouch
        {
            get
            {
                return SteamVR_Actions.p_default_SecondaryTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Primary2DAxisClick
        {
            get
            {
                return SteamVR_Actions.p_default_Primary2DAxisClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Primary2DAxisTouch
        {
            get
            {
                return SteamVR_Actions.p_default_Primary2DAxisTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Secondary2DAxisClick
        {
            get
            {
                return SteamVR_Actions.p_default_Secondary2DAxisClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Secondary2DAxisTouch
        {
            get
            {
                return SteamVR_Actions.p_default_Secondary2DAxisTouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_Primary2DAxis
        {
            get
            {
                return SteamVR_Actions.p_default_Primary2DAxis.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_Secondary2DAxis
        {
            get
            {
                return SteamVR_Actions.p_default_Secondary2DAxis.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_MenuButton,
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_TriggerPressed,
                    SteamVR_Actions.default_GripPressed,
                    SteamVR_Actions.default_PrimaryButton,
                    SteamVR_Actions.default_SecondaryButton,
                    SteamVR_Actions.default_PrimaryTouch,
                    SteamVR_Actions.default_SecondaryTouch,
                    SteamVR_Actions.default_Primary2DAxisClick,
                    SteamVR_Actions.default_Primary2DAxisTouch,
                    SteamVR_Actions.default_Secondary2DAxisClick,
                    SteamVR_Actions.default_Secondary2DAxisTouch,
                    SteamVR_Actions.default_Primary2DAxis,
                    SteamVR_Actions.default_Secondary2DAxis,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_MenuButton,
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_TriggerPressed,
                    SteamVR_Actions.default_GripPressed,
                    SteamVR_Actions.default_PrimaryButton,
                    SteamVR_Actions.default_SecondaryButton,
                    SteamVR_Actions.default_PrimaryTouch,
                    SteamVR_Actions.default_SecondaryTouch,
                    SteamVR_Actions.default_Primary2DAxisClick,
                    SteamVR_Actions.default_Primary2DAxisTouch,
                    SteamVR_Actions.default_Secondary2DAxisClick,
                    SteamVR_Actions.default_Secondary2DAxisTouch,
                    SteamVR_Actions.default_Primary2DAxis,
                    SteamVR_Actions.default_Secondary2DAxis,
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_MenuButton,
                    SteamVR_Actions.default_TriggerPressed,
                    SteamVR_Actions.default_GripPressed,
                    SteamVR_Actions.default_PrimaryButton,
                    SteamVR_Actions.default_SecondaryButton,
                    SteamVR_Actions.default_PrimaryTouch,
                    SteamVR_Actions.default_SecondaryTouch,
                    SteamVR_Actions.default_Primary2DAxisClick,
                    SteamVR_Actions.default_Primary2DAxisTouch,
                    SteamVR_Actions.default_Secondary2DAxisClick,
                    SteamVR_Actions.default_Secondary2DAxisTouch};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_Primary2DAxis,
                    SteamVR_Actions.default_Secondary2DAxis};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_MenuButton,
                    SteamVR_Actions.default_Trigger,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_TriggerPressed,
                    SteamVR_Actions.default_GripPressed,
                    SteamVR_Actions.default_PrimaryButton,
                    SteamVR_Actions.default_SecondaryButton,
                    SteamVR_Actions.default_PrimaryTouch,
                    SteamVR_Actions.default_SecondaryTouch,
                    SteamVR_Actions.default_Primary2DAxisClick,
                    SteamVR_Actions.default_Primary2DAxisTouch,
                    SteamVR_Actions.default_Secondary2DAxisClick,
                    SteamVR_Actions.default_Secondary2DAxisTouch,
                    SteamVR_Actions.default_Primary2DAxis,
                    SteamVR_Actions.default_Secondary2DAxis};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_MenuButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/MenuButton")));
            SteamVR_Actions.p_default_Trigger = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Trigger")));
            SteamVR_Actions.p_default_Grip = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Grip")));
            SteamVR_Actions.p_default_TriggerPressed = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TriggerPressed")));
            SteamVR_Actions.p_default_GripPressed = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GripPressed")));
            SteamVR_Actions.p_default_PrimaryButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/PrimaryButton")));
            SteamVR_Actions.p_default_SecondaryButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SecondaryButton")));
            SteamVR_Actions.p_default_PrimaryTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/PrimaryTouch")));
            SteamVR_Actions.p_default_SecondaryTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SecondaryTouch")));
            SteamVR_Actions.p_default_Primary2DAxisClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Primary2DAxisClick")));
            SteamVR_Actions.p_default_Primary2DAxisTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Primary2DAxisTouch")));
            SteamVR_Actions.p_default_Secondary2DAxisClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Secondary2DAxisClick")));
            SteamVR_Actions.p_default_Secondary2DAxisTouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Secondary2DAxisTouch")));
            SteamVR_Actions.p_default_Primary2DAxis = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/Primary2DAxis")));
            SteamVR_Actions.p_default_Secondary2DAxis = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/Secondary2DAxis")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
        }
    }
}
